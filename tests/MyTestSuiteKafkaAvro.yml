name: My Kafka Avro test suite
version: "2"
vars:
  kafkaHost: 'localhost'
  kafkaPort: '9092'
  kafkaUser: ''
  kafkaPwd: ''
  kafkaSchemaRegistryHost: 'schema-registry:8081'
testcases:
- name: Kafka test
  description: Test kafka
  steps:
  - type: kafka
    clientType: producer
    withSASL: false
    withTLS: false
    user: "{{.kafkaUser}}"
    password: "{{.kafkaPwd}}"
    addrs:
      - "{{.kafkaHost}}:{{.kafkaPort}}"
    schemaRegistryAddr: "{{.kafkaSchemaRegistryHost}}"
    messages:
    - topic: test-topic-avro
      key: '{"id":1}'
      value: '{"Avro":"message 1"}'
    - topic: test-topic-avro
      key: '{"id":2}'
      value: '{"Avro":"message 2"}'
  - type: kafka
    clientType: consumer
    withTLS: false
    withSASL: false
    user: "{{.kafkaUser}}"
    password: "{{.kafkaPwd}}"
    markOffset: true
    initialOffset: oldest
    messageLimit: 1
    groupID: venom
    addrs:
      - "{{.kafkaHost}}:{{.kafkaPort}}"
    schemaRegistryAddr: "{{.kafkaSchemaRegistryHost}}"
    topics:
      - test-topic-avro
    assertions:
    - result.messagesjson.messagesjson0.key.id ShouldEqual 1
    - result.messagesjson.messagesjson0.value.Avro ShouldEqual "message 1"
    - result.messages.__len__ ShouldEqual 2
  - type: exec
    script: kt admin --deletetopic test-topic-avro
